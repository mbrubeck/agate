# Agate

## Simple Gemini server for static files

Agate is a server for the Gemini network protocol, built with the Rust programming language. Agate has very few features, and can only serve static files. It uses async I/O, and should be quite efficient even when running on low-end hardware and serving many concurrent requests.

## Learn more

=> gemini://gemini.circumlunar.space/ Gemini project
=> https://github.com/mbrubeck/agate Agate on GitHub
=> https://crates.io/crates/agate Agate on crates.io

## Installation and setup

1. Download and unpack the pre-compiled binary:

=> https://github.com/mbrubeck/agate/releases

Or run `cargo install agate` to install agate from crates.io.

Or download the source code and run `cargo build --release` inside the source repository, then find the binary at `target/release/agate`.

2. Generate a self-signed TLS certificate and private key.  For example, if you have OpenSSL 1.1 installed, you can use a command like the following.  (Replace the hostname with the address of your Gemini server.)

```
openssl req -x509 -newkey rsa:4096 -keyout key.rsa -out cert.pem \
    -days 3650 -nodes -subj "/CN=example.com"
```

3. Run the server. You can use the following arguments to specify the locations of the content directory, certificate and key files, IP address and port to listen on, host name to expect in request URLs, and default language code(s) to include in the MIME type for for text/gemini files:

```
agate --content path/to/content/ \
      --key key.rsa \
      --cert cert.pem \
      --addr :::1965 \
      --addr 0.0.0.0:1965 \
      --hostname example.com \
      --lang en-US
```

All of the command-line arguments are optional.  Run `agate --help` to see the default values used when arguments are omitted.

When a client requests the URL `gemini://example.com/foo/bar`, Agate will respond with the file at `path/to/content/foo/bar`.  If there is a directory at that path, Agate will look for a file named `index.gmi` inside that directory. If there is no such file, but a file named `.directory-listing-ok` exists inside that directory, a basic directory listing is displayed. Files whose name starts with a dot (e.g. `.hidden`) are omitted from the list.

## Change log

### 2.3.0

* Combine address and port in a single command-line parameter again. 

### 2.2.0

* Split address and port into separate command-line parmeters.
* Listen on both IPv4 and IPv6 interfaces by default.
* Fix the logic for detecting hidden files.
* Fix redirects of URLs with query strings.

### 2.1.3

* Send a TLS close-notify message when closing a connection.
* Require absolute URLs in requests.
* Switch to the Tokio async runtime.

### 2.1.2

* More complete percent-encoding of special characters in filenames.
* Minor improvements to error logging.
* Internal code cleanup.

### 2.1.1

* Handle percent-escaped paths in URLs.
* Percent-escape whitespace characters in directory listings.
* List directory contents in alphabetical order.

### 2.1.0

* Optional directory listing.
* Updated dependencies.

### 2.0.0

* New format for command-line options.  See the documentation or run `agate --help` for details.
* Logging is enabled be default.  Use the `--silent` flag to disable it.
* New `--language` option to add a language tag to the MIME type for text/gemini responses.
* Pre-compiled binaries are built with the `cross` tool, for better compatibility with older Linux systems.

### 1.3.2

* Updated dependencies.

### 1.3.1

* Updated dependencies.

### 1.3.0

* Verify hostname and port in request URL.
* Improved logging.
* Don't redirect to "/" when the path is empty.
* Update dependencies.

### 1.2.2

* Use a faster/simpler library for guessing MIME types.
* Update dependencies.
* Publish pre-compiled ARM binaries.

### 1.2.1

* Reduce memory usage when serving large files.
* Update dependencies.

### 1.2.0

* Change text/gemini filename extension from .gemini to .gmi.
* Improve handling of requests that exceed 1KB.
* Reduce memory allocations and speed up request parsing.
* Update dependencies.

### 1.1.0

* Auto-detect MIME types.

### 1.0.1

* More accurate error codes.
* Handle scheme-less URLs.
* Throw error codes for unsupported URL types.
